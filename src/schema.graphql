type Normativa {
  ID_Normativa: ID!
  Codice: String
  Titolo: String
  Descrizione: String
  numero_controlli: Int
}
type Controllo {
  ID_Controllo: ID!
  Codice: String
  Nome: String
  Stato: String
  CategoriaControllo:[CategoriaControllo]!
  ID_Categoria: ID! 
  ID_NormativaRiferimento:ID!
  Descrizione: String
  Controllo:[Controllo ]
  Normativa:[Normativa]
  Abilitato:Boolean
  CategoriaNome:String
  NormativaCodice:String
}
type CategoriaControllo {
  ID_Categoria: ID!
  Nome: String
  Descrizione: String
  ID_Normativa:ID!
  
}

type MappaRelazione {
  ID_Relazione: ID!
  ID_Normativa_Master: ID
  Normativa_Master: String
  ID_Normativa_Linked:ID!
  Normativa_Linked: String
  Tabella_Mapping: String

  
}
type MappaControllo {
  ID_Mappa:ID
  ID_Controllo1: ID!
  ID_Controllo2: ID!
  Abilitato: Boolean!
  
}


type Listing {
  id: ID!
  title: String!
  numOfBeds: Int
  costPerNight: Float
  closedForBookings: Boolean
  longitude: Float
  amenities:[Amenity ]
}
type Amenity  {
    id: ID!
    name: String
   
}
type Aggettivo {
  modifica: String
  text: String
}
type Complemento {
  testo: String
  tipo: String
  tipo_specifico: String
}

type Participiale {
  testo: String
  modifica: String
}

type Modificatori {
  aggettivi: [Aggettivo]         # Una lista di aggettivi, es. ["fisico", "sicuro"]
  avverbi: [String]           # Una lista di avverbi, es. ["ad esempio", "completamente"]
  complementi: [Complemento]  # Una lista di complementi come oggetti
  participiali: [Participiale]# Una lista di partecipiali, ognuno con "testo" e "modifica"
  subordinate: [String]       # Una lista di subordinate (stringhe)
}

type FraseAnalizzata {
  frase: String            # La frase ricostruita, es. "L'organizzazione ha controllato le informazioni"
  soggetti: [String]          # Una lista di soggetti, es. ["l'organizzazione"]
  azione: [String]            # Una lista di azioni (verbi), es. ["ha", "controllato"]
  passive: Boolean            # Indica se la frase è passiva
  complemento: String         # Il complemento oggetto principale, es. "informazioni"
  agente_implicito: Boolean   # Indica se c'è un agente implicito nella frase
  modificatori: Modificatori  # Dettagli su modificatori (aggettivi, avverbi, complementi)
  relazioni: [String]         # Una lista di relazioni identificate nella frase
}

type AnalisiRisposta {
  frasi: [FraseAnalizzata]    # Una lista di frasi analizzate
}


type SuccessResponse {
  success: Boolean!
  message: String
  id: ID
}
type Mutation {
  updateAbilitatoMappaControllo(
    ID_Controllo1: ID!
    ID_Controllo2: ID!
    Abilitato: Boolean!
  ): MappaControllo
  deleteAssociazioneMappaControllo(
    ID_Controllo1: ID!
    ID_Controllo2: ID!
    Abilitato: Boolean!
  ): SuccessResponse!
  insertAssociazioneMappaControllo(
    ID_Controllo1: ID!
    ID_Controllo2: ID!
    Abilitato: Boolean!
    Affinita: String!
  ): MappaControllo!
}

type Query {


  analizzaTesto(testo: String!): AnalisiRisposta
  #separaFrase(testo: String!): AnalisiRisposta


  predict(inputData:[String]!): Float!
 
  featuredListings: [Listing!]!
  listing(id: ID!): Listing

  listNormative:[Normativa!]!
  listControlli:[Controllo!]!
  listControlliById(ID_Controllo:ID!):[Controllo!]!
  listControlliByNormativa(ID_NormativaRiferimento: ID!): [Controllo]!
  listControlliByNormativaDeep(ID_NormativaRiferimento: ID!,includeDeep:Boolean!,includeDesc:Boolean!): [Controllo]!
  listMappaByNormative(ID_NormativaMaster:ID!,ID_NormativaLinked: ID!): [MappaRelazione]!
  listMappaByNormativa(ID_Normativa:ID!): [MappaRelazione]!
  listMappaControlliByControllo(ID_Controllo: ID!): [Controllo]!
  listMappaControlliByControlloByNormativa(ID_Controllo: ID!,ID_Normativa: ID!): [Controllo]!

 
}
